#!/usr/bin/env bash

CONFIG_DIR="$HOME/.config"
BSPWM_SCRIPTS="$CONFIG_DIR/bspwm/scripts"

# ================================================
# Restartable system services (always restart)
# ================================================
declare -A RESTART_PROCESSES=(
	[polybar]="$CONFIG_DIR/polybar/launch.sh --theme cuts"
	[sxhkd]="sxhkd -c $CONFIG_DIR/sxhkd/sxhkdrc"
	[picom]="picom --config $CONFIG_DIR/picom/picom.conf --experimental-backends"
	[dunst]="dunst -config $CONFIG_DIR/dunst/dunstrc"
	[feh]="$HOME/.fehbg"     # Restore wallpaper
	[numlockx]="numlockx on" # Ensure num lock is enabled
)

# ================================================
# Background services that should persist
# (only launch if not already running)
# ================================================
declare -A KEEP_ALIVE_PROCESSES=(
	[1password]="1password --silent"
	[autorandr]="autorandr --change"        # Apply monitor layout
	['bell-off']="xset -b"                  # Disable system beep
	['xss-lock']="xss-lock -- i3lock-fancy" # Lock screen after timeout
	['xset-timeout']="xset s 900 300"       # Set screen saver timeout
)

# ================================================
# Custom user scripts
# ================================================
declare -A USER_SCRIPTS=(
	[workspaces]="$BSPWM_SCRIPTS/workspaces.sh"
	[low_bat_notifier]="$BSPWM_SCRIPTS/low_bat_notifier.sh"
)

# ================================================
# BSPWM Appearance and Behavior
# ================================================

# Window layout and spacing
bspc config border_width 0
bspc config window_gap 15
bspc config split_ratio 0.50

# Monocle layout tweaks
bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config paddingless_monocle true

# Focus and pointer behavior
bspc config focus_follows_pointer true
bspc config pointer_modifier mod1

# Window border colors
bspc config normal_border_color '#181825'
bspc config focused_border_color '#11111b'
bspc config presel_feedback_color '#cba6f7'

# ================================================
# Launch Restartable Processes
# ================================================
for name in "${!RESTART_PROCESSES[@]}"; do
	pkill -x "$name" &>/dev/null && sleep 1
	nohup ${RESTART_PROCESSES[$name]} &>/dev/null &
done

# ================================================
# Launch Keep-Alive Processes (if not already running)
# ================================================
for name in "${!KEEP_ALIVE_PROCESSES[@]}"; do
	pgrep -x "$name" &>/dev/null || nohup ${KEEP_ALIVE_PROCESSES[$name]} &>/dev/null &
done

# ================================================
# Launch User Scripts (if executable and not running)
# ================================================
for name in "${!USER_SCRIPTS[@]}"; do
	path="${USER_SCRIPTS[$name]}"
	[[ -x "$path" ]] && ! pgrep -f "$path" &>/dev/null && "$path" &
done
